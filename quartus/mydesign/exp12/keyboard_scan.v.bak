module keyboard_scan(input clk, input [7:0]data, input ready, 
	output reg nextdata_n, output reg [7:0] sc, output reg cap, output reg shift, output wren);
	
	parameter st = 2'b0, f0 = 2'b01, w1 = 2'b10, sh = 2'b11;
	
	wire qf0, qf1, qf2;
	reg ctrl;
	reg [7:0]P1;
	reg [7:0]P0;
	reg [1:0]state;
	assign qf0 = (P0 == 8'hf0);
	assign qf1 = (P1 == 8'hf0);
	assign wren = ready && (state == w1);
	
	initial
	begin
		P1 = 0;P0 = 0;state = 0;sc = 0;cap = 0;shift = 0;
	end
	
	always @(posedge clk)
	begin
		if(ready)	
		begin
			P1 = P0;
			P0 = data;
		end
		
		case(state)
		st:begin
				if(ready)//检测当前键盘码是否为shift\ctrl\capslock\F0，如果是，跳到对应状态，否则跳到w1
				begin
					if(P0 == 8'h12) //shift
					begin
						state = sh;
						shift = 1;
					end
					else if(P0 == 8'h14) //ctrl
					begin
						state = sh;
						ctrl = 1;
					end
					else if(P0 == 8'h58) //capslock
					begin
						state = sh;
						cap = ~cap;	
					end
					else if(P0 == 8'hf0) //f0
						state = f0;
					else
						state = w1;		
				end
				else
					state = st;
			end
		f0:begin
				if(P0 == 8'h12) //结束shift下输入
					shift = 0;
				if(P0 == 8'h14) //结束ctrl下输入
					ctrl = 0;
				if(qf1)
					state = st;
			end
		w1:begin
				sc = P0;
				if(qf0)
					state = f0;					
			end
		sh:begin
				if(qf0 || qf1)
					state = f0;
				else 
				begin
					if(P0 == 8'h12 || P0 == 8'h14 || P0 == 8'h58)
						state = sh;
					else
						state = w1;
				end
			end
		endcase
	end
	
endmodule 